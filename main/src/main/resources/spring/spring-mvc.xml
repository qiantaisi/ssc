<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:resources mapping="/static/**" location="WEB-INF/static/"/>

    <!-- 扫描注入 -->
    <context:component-scan base-package="project38.ssc.web"/>

    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <!-- 指定自己定义的validator -->
    <mvc:annotation-driven validator="validator" conversion-service="conversionService">
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <!--<property name="validationMessageSource" ref="messageSource"/>-->
    </bean>

    <!-- 自定义日期转换器 -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="project38.ssc.web.converter.DateConverter"></bean>
            </set>
        </property>
    </bean>

    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <!--<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
    <!--<property name="basenames">-->
    <!--<list>-->
    <!--&lt;!&ndash; 在web环境中一定要定位到classpath 否则默认到当前web应用下找 &ndash;&gt;-->
    <!--<value>classpath:messages</value>-->
    <!--<value>classpath:org/hibernate/validator/ValidationMessages</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="useCodeAsDefaultMessage" value="false"/>-->
    <!--<property name="defaultEncoding" value="UTF-8"/>-->
    <!--<property name="cacheSeconds" value="60"/>-->
    <!--</bean>-->

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <bean class="project38.ssc.web.interceptors.BasePathInterceptor"/>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="project38.ssc.web.interceptors.AuthInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="project38.ssc.web.interceptors.ParameterInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_CN"/>
    </bean>

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json</value>
            </list>
        </property>
    </bean>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="fastJsonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- 对模型视图添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 配置freeMarker的模板路径 -->
    <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
    <!--<property name="templateLoaderPath" value="WEB-INF/view/" />-->
    <!--<property name="defaultEncoding" value="UTF-8" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; freemarker视图解析器 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
    <!--<property name="suffix" value=".ftl" />-->
    <!--<property name="contentType" value="text/html;charset=UTF-8" />-->
    <!--&lt;!&ndash; 此变量值为pageContext.request, 页面使用方法：rc.contextPath &ndash;&gt;-->
    <!--<property name="requestContextAttribute" value="rc" />-->
    <!--</bean>-->

    <!-- 配置springMVC处理上传文件的信息 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!--&lt;!&ndash; 启用shrio授权注解拦截方式 &ndash;&gt;-->
    <!--<aop:config proxy-target-class="true"></aop:config>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
    <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

</beans>
